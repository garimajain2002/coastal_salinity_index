import arcpy  # Set workspace if needed arcpy.env.workspace = r"C:\Users\Garima\Desktop\ArcGISPro\Ch3\AAG_FieldData\AAG_FieldData\AAG_FieldData.gdb"  # Define file paths multi_band_tiff = r"C:\Users\Garima\Desktop\ArcGISPro\Ch3\AAG_FieldData\AAG_FieldData\AAG_FieldData.gdb\extract_masked_fromLandsat" mask_tiff = r"C:\Users\Garima\Desktop\ArcGISPro\Ch3\AAG_FieldData\AAG_FieldData\AAG_FieldData.gdb\aqua_class2mask" output_tiff = r"C:\Users\Garima\Desktop\ArcGISPro\Ch3\AAG_FieldData\AAG_FieldData\AAG_FieldData.gdb\landsat_masked"  # Use Con tool to mask the multi-band raster using the single-band mask masked_raster = arcpy.sa.Con(arcpy.Raster(mask_tiff) == 1, arcpy.Raster(multi_band_tiff))  # Save the output masked_raster.save(output_tiff)  print("Masking complete. Output saved to:", output_tiff)
# Set workspace if needed arcpy.env.workspace = r"C:\Users\Garima\Desktop\ArcGISPro\Ch3\AAG_FieldData\AAG_FieldData\AAG_FieldData.gdb"  # Define file paths multi_band_tiff = r"C:\Users\Garima\Desktop\ArcGISPro\Ch3\AAG_FieldData\AAG_FieldData\AAG_FieldData.gdb\extract_masked_fromLandsat" mask_tiff = r"C:\Users\Garima\Desktop\ArcGISPro\Ch3\AAG_FieldData\AAG_FieldData\AAG_FieldData.gdb\aqua_class2mask" output_tiff = r"C:\Users\Garima\Desktop\ArcGISPro\Ch3\AAG_FieldData\AAG_FieldData\AAG_FieldData.gdb\landsat_masked"
import arcpy  # Set workspace if needed arcpy.env.workspace = r"C:\Users\Garima\Desktop\ArcGISPro\Ch3\AAG_FieldData\AAG_FieldData\AAG_FieldData.gdb"  # Define file paths multi_band_tiff = r"C:\Users\Garima\Desktop\ArcGISPro\Ch3\AAG_FieldData\AAG_FieldData\AAG_FieldData.gdb\extract_masked_fromLandsat" mask_tiff = r"C:\Users\Garima\Desktop\ArcGISPro\Ch3\AAG_FieldData\AAG_FieldData\AAG_FieldData.gdb\aqua_class2mask" output_tiff = r"C:\Users\Garima\Desktop\ArcGISPro\Ch3\AAG_FieldData\AAG_FieldData\AAG_FieldData.gdb\landsat_masked"  # Load the rasters multi_band_raster = arcpy.Raster(multi_band_tiff) mask_raster = arcpy.Raster(mask_tiff)  # Get the number of bands in the multi-band raster band_count = multi_band_raster.bandCount  # Loop through each band and apply the mask band_list = [] for i in range(1, band_count + 1):     # Extract the current band     current_band = arcpy.sa.Raster(multi_band_raster, i)          # Apply the mask using Con     masked_band = arcpy.sa.Con(mask_raster == 1, current_band)          # Save the masked band to a new file     output_band_path = f"{output_folder}/masked_band_{i}.tif"     masked_band.save(output_band_path)          # Append the masked band to the list     band_list.append(output_band_path)  # Optionally, you can merge the bands back into a single multi-band raster output_multi_band = r"C:\path\to\output_masked_multiband.tif" arcpy.management.CompositeBands(band_list, output_multi_band)  print(f"Masking complete. Multi-band raster saved to: {output_multi_band}")
import arcpy  # Set workspace if needed arcpy.env.workspace = r"C:\Users\Garima\Desktop\ArcGISPro\Ch3\AAG_FieldData\AAG_FieldData\AAG_FieldData.gdb"  # Define file paths multi_band_tiff = r"C:\Users\Garima\Desktop\ArcGISPro\Ch3\AAG_FieldData\AAG_FieldData\AAG_FieldData.gdb\extract_masked_fromLandsat" mask_tiff = r"C:\Users\Garima\Desktop\ArcGISPro\Ch3\AAG_FieldData\AAG_FieldData\AAG_FieldData.gdb\aqua_class2mask" output_tiff = r"C:\Users\Garima\Desktop\ArcGISPro\Ch3\AAG_FieldData\AAG_FieldData\AAG_FieldData.gdb\landsat_masked"
import arcpy  # Set workspace if needed arcpy.env.workspace = r"C:\Users\Garima\Desktop\ArcGISPro\Ch3\AAG_FieldData\AAG_FieldData\AAG_FieldData.gdb"  # Define file paths multi_band_tiff = r"C:\Users\Garima\Desktop\ArcGISPro\Ch3\AAG_FieldData\AAG_FieldData\AAG_FieldData.gdb\extract_masked_fromLandsat" mask_tiff = r"C:\Users\Garima\Desktop\ArcGISPro\Ch3\AAG_FieldData\AAG_FieldData\AAG_FieldData.gdb\aqua_class2mask" output_tiff = r"C:\Users\Garima\Desktop\ArcGISPro\Ch3\AAG_FieldData\AAG_FieldData\AAG_FieldData.gdb\landsat_masked"  # Load the rasters mask_raster = arcpy.Raster(mask_tiff)  # Get the number of bands in the multi-band raster multi_band_raster = arcpy.Raster(multi_band_tiff) band_count = multi_band_raster.bandCount  # List to store paths of the masked bands band_list = []  # Loop through each band and apply the mask for i in range(1, band_count + 1):     # Extract the current band from the multi-band raster     current_band = arcpy.ia.ExtractBand(multi_band_tiff, i)          # Apply the mask using Con     masked_band = arcpy.sa.Con(mask_raster == 1, current_band)          # Save the masked band to a new file     output_band_path = f"{output_folder}/masked_band_{i}.tif"     masked_band.save(output_band_path)          # Append the masked band to the list     band_list.append(output_band_path)  # Optionally, you can merge the bands back into a single multi-band raster output_multi_band = r"C:\path\to\output_masked_multiband.tif" arcpy.management.CompositeBands(band_list, output_multi_band)  print(f"Masking complete. Multi-band raster saved to: {output_multi_band}")
import arcpy  # Set workspace if needed arcpy.env.workspace = r"C:\Users\Garima\Desktop\ArcGISPro\Ch3\AAG_FieldData\AAG_FieldData\AAG_FieldData.gdb"  # Define file paths multi_band_tiff = r"C:\Users\Garima\Desktop\ArcGISPro\Ch3\AAG_FieldData\AAG_FieldData\AAG_FieldData.gdb\extract_masked_fromLandsat" mask_tiff = r"C:\Users\Garima\Desktop\ArcGISPro\Ch3\AAG_FieldData\AAG_FieldData\AAG_FieldData.gdb\aqua_class2mask" output_tiff = r"C:\Users\Garima\Desktop\ArcGISPro\Ch3\AAG_FieldData\AAG_FieldData\AAG_FieldData.gdb\landsat_masked" # Load the rasters mask_raster = arcpy.Raster(mask_tiff)  # Get the number of bands in the multi-band raster multi_band_raster = arcpy.Raster(multi_band_tiff) band_count = multi_band_raster.bandCount  # List to store the masked bands as temporary outputs masked_band_list = []  # Loop through each band and apply the mask for i in range(1, band_count + 1):     # Extract the current band from the multi-band raster     current_band = arcpy.ia.ExtractBand(multi_band_tiff, i)          # Apply the mask using Con     masked_band = arcpy.sa.Con(mask_raster == 1, current_band)          # Save the masked band to a temporary file     output_band_path = f"{output_folder}/masked_band_{i}.tif"     masked_band.save(output_band_path)          # Add the output band path to the list for later combination     masked_band_list.append(output_band_path)  # Combine all the masked bands into a single multi-band raster arcpy.management.CompositeBands(masked_band_list, output_multi_band)  print(f"Masking complete. Multi-band raster saved to: {output_multi_band}")
import arcpy import os  # Set workspace if needed arcpy.env.workspace = r"C:\Users\Garima\Desktop\ArcGISPro\Ch3\AAG_FieldData\AAG_FieldData\AAG_FieldData.gdb"  # Define file paths multi_band_tiff = r"C:\Users\Garima\Desktop\ArcGISPro\Ch3\AAG_FieldData\AAG_FieldData\AAG_FieldData.gdb\extract_masked_fromLandsat" mask_tiff = r"C:\Users\Garima\Desktop\ArcGISPro\Ch3\AAG_FieldData\AAG_FieldData\AAG_FieldData.gdb\aqua_class2mask" output_folder = r"C:\Users\Garima\Desktop\ArcGISPro\Ch3\AAG_FieldData\AAG_FieldData\Output_Data"  # Folder to save the output masked bands output_multi_band = r"C:\Users\Garima\Desktop\ArcGISPro\Ch3\AAG_FieldData\AAG_FieldData\AAG_FieldData.gdb\output_multiband_masked"  # Path for final output  # Load the mask raster mask_raster = arcpy.Raster(mask_tiff)  # Get the number of bands in the multi-band raster multi_band_raster = arcpy.Raster(multi_band_tiff) band_count = multi_band_raster.bandCount  # Ensure the output folder exists if not os.path.exists(output_folder):     os.makedirs(output_folder)  # List to store the masked bands as temporary outputs masked_band_list = []  # Loop through each band and apply the mask for i in range(1, band_count + 1):     # Extract the current band from the multi-band raster     current_band = arcpy.ia.ExtractBand(multi_band_tiff, i)          # Apply the mask using Con     masked_band = arcpy.sa.Con(mask_raster == 1, current_band)          # Save the masked band to a temporary file     output_band_path = os.path.join(output_folder, f"masked_band_{i}.tif")     masked_band.save(output_band_path)          # Add the saved band file path to the list for later combination     masked_band_list.append(output_band_path)  # Now combine the masked bands into a single multi-band raster arcpy.management.CompositeBands(masked_band_list, output_multi_band)  print(f"Masking complete. Multi-band raster saved to: {output_multi_band}")
import arcpy  # Define input and output raster paths input_raster = r"C:\Users\Garima\Desktop\ArcGISPro\Ch3\AAG_FieldData\AAG_FieldData\AAG_FieldData.gdb\extract_Bangmasked_fromLandsat.tif" output_raster = r"C:\Users\Garima\Desktop\ArcGISPro\Ch3\AAG_FieldData\AAG_FieldData\AAG_FieldData.gdb\aqua_class2mask_Bang.tif"  # Apply conditional masking arcpy.gp.RasterCalculator_sa(     'Con("{}" != 2, "{}")'.format(input_raster, input_raster),      output_raster )
import arcpy  # Define input and output raster paths (use raw string literals) input_raster = r"C:\Users\Garima\Desktop\ArcGISPro\Ch3\AAG_FieldData\AAG_FieldData\AAG_FieldData.gdb\extract_Bangmasked_fromLandsat" output_raster = r"C:\Users\Garima\Desktop\ArcGISPro\Ch3\AAG_FieldData\AAG_FieldData\AAG_FieldData.gdb\aqua_class2mask_Bang"  # Apply conditional masking arcpy.gp.RasterCalculator_sa(     f'Con("{input_raster}" != 2, "{input_raster}")',     output_raster )  print(f"Mask applied. Output saved to: {output_raster}")
import arcpy  # Define input and output raster paths (use raw string literals) input_raster = r"C:\Users\Garima\Desktop\ArcGISPro\Ch3\AAG_FieldData\AAG_FieldData\AAG_FieldData.gdb\extract_Bangmasked_fromLandsat" output_raster = r"C:\Users\Garima\Desktop\ArcGISPro\Ch3\AAG_FieldData\AAG_FieldData\AAG_FieldData.gdb\aqua_class2mask_Bang"  # Apply conditional masking arcpy.sa.Con(     in_conditional_raster=f'{input_raster} != 2',     in_true_raster_or_constant=input_raster, ).save(output_raster)  print(f"Mask applied. Output saved to: {output_raster}")
import arcpy  # Define input and output raster paths input_raster = r"C:\Users\Garima\Desktop\ArcGISPro\Ch3\AAG_FieldData\AAG_FieldData\AAG_FieldData.gdb\extract_Bangmasked_fromLandsat" output_raster = r"C:\Users\Garima\Desktop\ArcGISPro\Ch3\AAG_FieldData\AAG_FieldData\AAG_FieldData.gdb\aqua_class2mask_Bang"  # Use the Raster object to reference the input raster input_raster_obj = arcpy.Raster(input_raster)  # Apply the conditional masking result = arcpy.sa.Con(input_raster_obj != 2, input_raster_obj)  # Save the output raster result.save(output_raster)  print(f"Mask applied. Output saved to: {output_raster}")
desc = arcpy.Describe(input_raster) print(f"Raster Type: {desc.dataType}, Spatial Reference: {desc.spatialReference.name}")
import arcpy  # Define input and output raster paths input_raster = r"C:\Users\Garima\Desktop\ArcGISPro\Ch3\AAG_FieldData\AAG_FieldData\AAG_FieldData.gdb\extract_Bangmasked_fromLandsat" output_raster = r"C:\Users\Garima\Desktop\ArcGISPro\Ch3\AAG_FieldData\AAG_FieldData\AAG_FieldData.gdb\aqua_class2mask_Bang"  # Use the Raster object to reference the input raster input_raster_obj = arcpy.Raster(input_raster)  # Apply the conditional masking result = arcpy.sa.Con(input_raster_obj != 2, input_raster_obj)  # Save the output raster result.save(output_raster)  print(f"Mask applied. Output saved to: {output_raster}")
import arcpy  # Define input and output raster paths input_raster = r"C:\Users\Garima\Desktop\ArcGISPro\Ch3\AAG_FieldData\AAG_FieldData\extract_Bangmasked_fromLandsat" output_raster = r"C:\Users\Garima\Desktop\ArcGISPro\Ch3\AAG_FieldData\AAG_FieldData\aqua_class2mask_Bang"  # Use the Raster object to reference the input raster input_raster_obj = arcpy.Raster(input_raster)  # Apply the conditional masking result = arcpy.sa.Con(input_raster_obj != 2, input_raster_obj)  # Save the output raster result.save(output_raster)  print(f"Mask applied. Output saved to: {output_raster}")
import arcpy  # Define input and output raster paths classified_raster = r"C:\Users\Garima\Google Drive (garimajain2002@gmail.com)\03 PHD_Work\Chapter 1\Salinity and pH Indices\GEE_Outputs\Classified_Bangladesh_Composite4.tif" landsat_raster = r"C:\Users\Garima\Google Drive (garimajain2002@gmail.com)\03 PHD_Work\Chapter 1\Salinity and pH Indices\GEE_Outputs\Landsat_Composite_AllBands_Bang.tif" output_raster = r"C:\Users\Garima\Google Drive (garimajain2002@gmail.com)\03 PHD_Work\Chapter 1\Salinity and pH Indices\Bangladesh_Sample_Points\Output_Masked_Raster_Bang.tif"  # Check if both rasters exist if arcpy.Exists(classified_raster) and arcpy.Exists(landsat_raster):     print("Both rasters found, proceeding with masking...")      # Convert input rasters to Raster objects     classified = arcpy.Raster(classified_raster)     landsat = arcpy.Raster(landsat_raster)      # Perform conditional masking     masked_result = arcpy.sa.Con(classified != 2, landsat)      # Save the output raster     masked_result.save(output_raster)     print(f"Mask applied successfully. Output saved at: {output_raster}") else:     print("One or both input rasters were not found. Please check the paths.")
import arcpy  # Define input and output raster paths classified_raster = r"C:\Users\Garima\Google Drive (garimajain2002@gmail.com)\03 PHD_Work\Chapter 1\Salinity and pH Indices\GEE_Outputs\Classified_Bangladesh_Composite4.tif" landsat_raster = r"C:\Users\Garima\Google Drive (garimajain2002@gmail.com)\03 PHD_Work\Chapter 1\Salinity and pH Indices\GEE_Outputs\Landsat_Composite_AllBands_Bang.tif" output_raster = r"C:\Users\Garima\Google Drive (garimajain2002@gmail.com)\03 PHD_Work\Chapter 1\Salinity and pH Indices\Bangladesh_Sample_Points\Output_Masked_Raster.tif"  # Check if both rasters exist if arcpy.Exists(classified_raster) and arcpy.Exists(landsat_raster):     print("Both rasters found, proceeding with masking...")      # Convert input rasters to Raster objects     classified = arcpy.Raster(classified_raster)     landsat = arcpy.Raster(landsat_raster)      # Loop through each band of the Landsat raster and apply the mask     band_count = landsat.bandCount     output_bands = []      for i in range(1, band_count + 1):         band = landsat.getRasterBand(i)         masked_band = arcpy.sa.Con(classified != 2, band)  # Mask where classified != 2         output_bands.append(masked_band)      # Merge the output bands into a single multi-band raster     final_output = arcpy.sa.Stack(output_bands)     final_output.save(output_raster)      print(f"Mask applied successfully. Output saved at: {output_raster}") else:     print("One or both input rasters were not found. Please check the paths.")
import arcpy from arcpy import sa  # Define input and output raster paths classified_raster = r"C:\Users\Garima\Google Drive (garimajain2002@gmail.com)\03 PHD_Work\Chapter 1\Salinity and pH Indices\GEE_Outputs\Classified_Bangladesh_Composite4.tif" landsat_raster = r"C:\Users\Garima\Google Drive (garimajain2002@gmail.com)\03 PHD_Work\Chapter 1\Salinity and pH Indices\GEE_Outputs\Landsat_Composite_AllBands_Bang.tif" output_raster = r"C:\Users\Garima\Google Drive (garimajain2002@gmail.com)\03 PHD_Work\Chapter 1\Salinity and pH Indices\Bangladesh_Sample_Points\Output_Masked_Raster.tif"  # Check if both rasters exist if arcpy.Exists(classified_raster) and arcpy.Exists(landsat_raster):     print("Both rasters found, proceeding with masking...")      # Convert input rasters to Raster objects     classified = arcpy.Raster(classified_raster)     landsat = arcpy.Raster(landsat_raster)      # Get the individual bands of the Landsat raster     bands = []     for i in range(1, landsat.bandCount + 1):         band = landsat.getBand(i)  # Corrected method to get each band         bands.append(band)      # Apply mask (classified != 2) to each band     masked_bands = []     for band in bands:         masked_band = sa.Con(classified != 2, band)  # Mask where classified != 2         masked_bands.append(masked_band)      # Merge the output bands into a single multi-band raster     final_output = sa.Stack(masked_bands)     final_output.save(output_raster)      print(f"Mask applied successfully. Output saved at: {output_raster}") else:     print("One or both input rasters were not found. Please check the paths.")
# Apply the mask using Con     masked_band = arcpy.sa.Con(mask_raster == 1, current_band)          # Save the masked band to a temporary file     output_band_path = os.path.join(output_folder, f"masked_band_{i}.tif")     masked_band.save(output_band_path)          # Add the saved band file path to the list for later combination     masked_band_list.append(output_band_path)  # Now combine the masked bands into a single multi-band raster arcpy.management.CompositeBands(masked_band_list, output_multi_band)  print(f"Masking complete. Multi-band raster saved to: {output_multi_band}")
import arcpy from arcpy.sa import Reclassify, RemapValue  # Define input and output raster paths input_raster = r"C:\Users\Garima\Desktop\ArcGISPro\Ch3\AAG_FieldData\AAG_FieldData\aqua_class2mask_Bang.tif" output_raster = r"C:\Users\Garima\Desktop\ArcGISPro\Ch3\AAG_FieldData\AAG_FieldData\reclassified_aqua_class2mask_Bang.tif"  # Create remap list (value = new value) remap = RemapValue([[0, 1], [1, 1], [2, 0]])  # 0 and 1 become 1, 2 becomes 0  # Apply reclassification reclassified_raster = Reclassify(input_raster, "Value", remap)  # Save the output raster reclassified_raster.save(output_raster)  print(f"Reclassification complete. Output saved at: {output_raster}")
arcpy.CheckOutExtension("Spatial")
import arcpy from arcpy.sa import Reclassify, RemapRange  # Define input and output raster paths input_raster = r"C:\Users\Garima\Desktop\ArcGISPro\Ch3\AAG_FieldData\AAG_FieldData\aqua_class2mask_Bang.tif" output_raster = r"C:\Users\Garima\Desktop\ArcGISPro\Ch3\AAG_FieldData\AAG_FieldData\reclassified_aqua_class2mask_Bang.tif"  # Create remap ranges (value ranges and corresponding new value) remap = RemapRange([[0, 1, 1], [1, 1, 1], [2, 2, 0]])  # 0 and 1 become 1, 2 becomes 0  # Apply reclassification reclassified_raster = Reclassify(input_raster, "Value", remap)  # Save the output raster reclassified_raster.save(output_raster)  print(f"Reclassification complete. Output saved at: {output_raster}")
import arcpy import os  # Set workspace if needed arcpy.env.workspace = r"C:\Users\Garima\Desktop\ArcGISPro\Ch3\AAG_FieldData\AAG_FieldData\AAG_FieldData.gdb"  # Define file paths multi_band_tiff = r"C:\Users\Garima\Desktop\ArcGISPro\Ch3\AAG_FieldData\AAG_FieldData\AAG_FieldData.gdb\Landsat_Composite_AllBands_Bang" mask_tiff = r"C:\Users\Garima\Desktop\ArcGISPro\Ch3\AAG_FieldData\AAG_FieldData\AAG_FieldData.gdb\Reclass_Recl1" output_folder = r"C:\Users\Garima\Desktop\ArcGISPro\Ch3\AAG_FieldData\AAG_FieldData\Output_Data"  # Folder to save the output masked bands output_multi_band = r"C:\Users\Garima\Desktop\ArcGISPro\Ch3\AAG_FieldData\AAG_FieldData\AAG_FieldData.gdb\output_multiband_masked_Bang"  # Path for final output  # Load the mask raster mask_raster = arcpy.Raster(mask_tiff)  # Get the number of bands in the multi-band raster multi_band_raster = arcpy.Raster(multi_band_tiff) band_count = multi_band_raster.bandCount  # Ensure the output folder exists if not os.path.exists(output_folder):     os.makedirs(output_folder)  # List to store the masked bands as temporary outputs masked_band_list = []  # Loop through each band and apply the mask for i in range(1, band_count + 1):     # Extract the current band from the multi-band raster     current_band = arcpy.ia.ExtractBand(multi_band_tiff, i)          # Apply the mask using Con     masked_band = arcpy.sa.Con(mask_raster == 1, current_band)          # Save the masked band to a temporary file     output_band_path = os.path.join(output_folder, f"masked_band_{i}.tif")     masked_band.save(output_band_path)          # Add the saved band file path to the list for later combination     masked_band_list.append(output_band_path)  # Now combine the masked bands into a single multi-band raster arcpy.management.CompositeBands(masked_band_list, output_multi_band)  print(f"Masking complete. Multi-band raster saved to: {output_multi_band}")
import arcpy import os  # Set workspace if needed arcpy.env.workspace = r"C:\Users\Garima\Desktop\ArcGISPro\Ch3\AAG_FieldData\AAG_FieldData\AAG_FieldData.gdb"  # Define file paths multi_band_tiff = r"C:\Users\Garima\Desktop\ArcGISPro\Ch3\AAG_FieldData\AAG_FieldData\AAG_FieldData.gdb\Landsat_Composite_All_Bang" mask_tiff = r"C:\Users\Garima\Desktop\ArcGISPro\Ch3\AAG_FieldData\AAG_FieldData\AAG_FieldData.gdb\Reclass_Recl1" output_folder = r"C:\Users\Garima\Desktop\ArcGISPro\Ch3\AAG_FieldData\AAG_FieldData\Output_Data"  # Folder to save the output masked bands output_multi_band = r"C:\Users\Garima\Desktop\ArcGISPro\Ch3\AAG_FieldData\AAG_FieldData\AAG_FieldData.gdb\output_multiband_masked_Bang"  # Path for final output  # Load the mask raster mask_raster = arcpy.Raster(mask_tiff)  # Get the number of bands in the multi-band raster multi_band_raster = arcpy.Raster(multi_band_tiff) band_count = multi_band_raster.bandCount  # Ensure the output folder exists if not os.path.exists(output_folder):     os.makedirs(output_folder)  # List to store the masked bands as temporary outputs masked_band_list = []  # Loop through each band and apply the mask for i in range(1, band_count + 1):     # Extract the current band from the multi-band raster     current_band = arcpy.ia.ExtractBand(multi_band_tiff, i)          # Apply the mask using Con     masked_band = arcpy.sa.Con(mask_raster == 1, current_band)          # Save the masked band to a temporary file     output_band_path = os.path.join(output_folder, f"masked_band_{i}.tif")     masked_band.save(output_band_path)          # Add the saved band file path to the list for later combination     masked_band_list.append(output_band_path)  # Now combine the masked bands into a single multi-band raster arcpy.management.CompositeBands(masked_band_list, output_multi_band)  print(f"Masking complete. Multi-band raster saved to: {output_multi_band}")
import arcpy import os  # Set workspace if needed arcpy.env.workspace = r"C:\Users\Garima\Desktop\ArcGISPro\Ch3\AAG_FieldData\AAG_FieldData\AAG_FieldData.gdb"  # Define file paths multi_band_tiff = r"C:\Users\Garima\Google Drive (garimajain2002@gmail.com)\03 PHD_Work\Chapter 1\Salinity and pH Indices\GEE_Outputs\Landsat_Composite_All_Bang" mask_tiff = r"C:\Users\Garima\Desktop\ArcGISPro\Ch3\AAG_FieldData\AAG_FieldData\AAG_FieldData.gdb\Reclass_Recl1" output_folder = r"C:\Users\Garima\Desktop\ArcGISPro\Ch3\AAG_FieldData\AAG_FieldData\Output_Data"  # Folder to save the output masked bands output_multi_band = r"C:\Users\Garima\Desktop\ArcGISPro\Ch3\AAG_FieldData\AAG_FieldData\AAG_FieldData.gdb\output_multiband_masked_Bang"  # Path for final output  # Load the mask raster mask_raster = arcpy.Raster(mask_tiff)  # Get the number of bands in the multi-band raster multi_band_raster = arcpy.Raster(multi_band_tiff) band_count = multi_band_raster.bandCount  # Ensure the output folder exists if not os.path.exists(output_folder):     os.makedirs(output_folder)  # List to store the masked bands as temporary outputs masked_band_list = []  # Loop through each band and apply the mask for i in range(1, band_count + 1):     # Extract the current band from the multi-band raster     current_band = arcpy.ia.ExtractBand(multi_band_tiff, i)          # Apply the mask using Con     masked_band = arcpy.sa.Con(mask_raster == 1, current_band)          # Save the masked band to a temporary file     output_band_path = os.path.join(output_folder, f"masked_band_{i}.tif")     masked_band.save(output_band_path)          # Add the saved band file path to the list for later combination     masked_band_list.append(output_band_path)  # Now combine the masked bands into a single multi-band raster arcpy.management.CompositeBands(masked_band_list, output_multi_band)  print(f"Masking complete. Multi-band raster saved to: {output_multi_band}")
import arcpy import os  # Set workspace if needed arcpy.env.workspace = r"C:\Users\Garima\Desktop\ArcGISPro\Ch3\AAG_FieldData\AAG_FieldData\AAG_FieldData.gdb"  # Define file paths multi_band_tiff = r"C:\Users\Garima\Desktop\ArcGISPro\Ch3\AAG_FieldData\AAG_FieldData\AAG_FieldData.gdb\Landsat_Composite_All_Bang" mask_tiff = r"C:\Users\Garima\Desktop\ArcGISPro\Ch3\AAG_FieldData\AAG_FieldData\AAG_FieldData.gdb\Reclass_Recl1" output_folder = r"C:\Users\Garima\Desktop\ArcGISPro\Ch3\AAG_FieldData\AAG_FieldData\Output_Data"  # Folder to save the output masked bands output_multi_band = r"C:\Users\Garima\Desktop\ArcGISPro\Ch3\AAG_FieldData\AAG_FieldData\AAG_FieldData.gdb\output_multiband_masked_Bang"  # Path for final output  # Load the mask raster mask_raster = arcpy.Raster(mask_tiff)  # Get the number of bands in the multi-band raster multi_band_raster = arcpy.Raster(multi_band_tiff) band_count = multi_band_raster.bandCount  # Ensure the output folder exists if not os.path.exists(output_folder):     os.makedirs(output_folder)  # List to store the masked bands as temporary outputs masked_band_list = []  # Loop through each band and apply the mask for i in range(1, band_count + 1):     # Extract the current band from the multi-band raster     current_band = arcpy.ia.ExtractBand(multi_band_tiff, i)          # Apply the mask using Con     masked_band = arcpy.sa.Con(mask_raster == 1, current_band)          # Save the masked band to a temporary file     output_band_path = os.path.join(output_folder, f"masked_band_{i}.tif")     masked_band.save(output_band_path)          # Add the saved band file path to the list for later combination     masked_band_list.append(output_band_path)  # Now combine the masked bands into a single multi-band raster arcpy.management.CompositeBands(masked_band_list, output_multi_band)  print(f"Masking complete. Multi-band raster saved to: {output_multi_band}")
